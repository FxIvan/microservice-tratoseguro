# Use root/example as user/password credentials
version: "3.1"

services:
  mongo:
    image: mongo:latest
    restart: unless-stopped
    container_name: microservicio-auth
    networks:
      - network2
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
      MONGO_INITDB_DATABASE: user
    volumes:
      - ./data:/data/db
      - ./data/log:/var/log/mongodb/
    ports:
      - "27018:27017" # Puerto del host:Puerto del contenedor
    env_file:
      - .env

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    container_name: microservicio-auth-api
    networks:
      - network2
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    links:
      - mongo
    ports:
      - "8080:8081" # Puerto del host:Puerto del contenedor
    env_file:
      - .env

  golang-auth-api:
    image: ${DOCKER_REGISTRY-}microservicio-auth-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 9090:4000
    networks:
      - network2
    environment:
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_USER: ${MONGO_USER}
      JWTSecret: ${JWTSecret}
      JWTExpirationMs: ${JWTExpirationMs}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}

networks:
  network2:
